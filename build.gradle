plugins {
  id 'eclipse'
  id 'groovy'
  // Apply the Plugin Publish Plugin to make plugin publication possible
  id 'com.gradle.plugin-publish' version '1.0.0'
}

repositories {
  mavenCentral()
}
// latest core ? 8.11.0.56591
dependencies {
  implementation 'org.apache.commons:commons-text:1.9'
  implementation 'org.sonarsource.sonarlint.core:sonarlint-core:8.0.2.42487'
  testImplementation('org.assertj:assertj-core:3.22.0')
  testImplementation('org.junit.jupiter:junit-jupiter')
  testImplementation(platform('org.junit:junit-bom:5.8.2'))
}

group = 'se.solrike.sonarlint'
version = '1.0.0-beta.8'
sourceCompatibility = '11'
targetCompatibility = '11'

tasks.withType(GroovyCompile) {
  configure(options) {
    options.compilerArgs << '-Xlint:deprecation' << '-Xlint:unchecked'
  }
}

sourceSets {
  main {
    java {
      srcDirs = [] // don't compile Java code twice
    }
    groovy {
      srcDirs = [
        'src/main/groovy',
        'src/main/java'
      ]
    }
  }
}

javadoc {
  enabled = false
}
groovydoc {
  enabled = false
}

eclipse {
  classpath {
    defaultOutputDir = file('bin.nosync/main')
    file {
      whenMerged {
        def src = entries.find { it.path == 'src/main/java' }
        if (src) src.output = 'bin.nosync/main'
        src = entries.find { it.path == 'src/main/resources' }
        if (src) src.output = 'bin.nosync/main'
        src = entries.find { it.path == 'src/main/groovy' }
        if (src) src.output = 'bin.nosync/main'
        src = entries.find { it.path == '.apt_generated' }
        if (src) src.output = 'bin.nosync/main'
        src = entries.find { it.path == 'src/test/java' }
        if (src) src.output = 'bin.nosync/test'
        src = entries.find { it.path == 'src/test/resources' }
        if (src) src.output = 'bin.nosync/test'
        src = entries.find { it.path == '.apt_generated_tests' }
        if (src) src.output = 'bin.nosync/test'
      }
    }
  }
}

test {
  useJUnitPlatform()
}


// publish the plugin like: ./gradlew publishPlugins
gradlePlugin {
  plugins {
    sonarlintPlugin {
      id = 'se.solrike.sonarlint'
      implementationClass = 'se.solrike.sonarlint.SonarlintPlugin'
      displayName = 'SonarLint plugin'
      description = 'SonarLint static code analysis using stand-alone SonarLint engine, for ' +
          'Java, Kotlin and Node projects. Min Gradle version 7.0.'
    }
  }
}

pluginBundle {
  // These settings are set for the whole plugin bundle
  website = 'https://github.com/Lucas3oo/sonarlint-gradle-plugin'
  vcsUrl = 'https://github.com/Lucas3oo/sonarlint-gradle-plugin'
  pluginTags = [
    sonarlintPlugin: [
      'sonarlint',
      'java',
      'kotlin',
      'node',
      'code quality',
      'lint',
      'static code analysis',
      'static analysis',
      'code analysis',
      'codesmells'
    ]
  ]
}

// to upgrade the metainfo about which gradle version we shall use. Run ./gradlew wrapper after you have updated the version. The commit the new wrapper files except the gradlew.bat
wrapper {
  gradleVersion = '7.5.1'
}